{"version":3,"sources":["components/Statistics/Statistics.module.css","App.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","sectionTitle","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","type","feedbackBtn","Statistics","good","neutral","bad","total","percentage","statsList","statsElemGood","statsElemNeutral","statsElemBad","statsElemTotal","statsElemPercent","Notification","message","FeedbackApp","useState","setGoodRate","setNeutralRate","setBadRate","countTotalFeedback","Wrapper","optionType","prevState","goodFeedbackPecentage","Math","round","countGoodFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,cAAgB,kCAAkC,aAAe,iCAAiC,iBAAmB,qCAAqC,eAAiB,mCAAmC,iBAAmB,uC,qCCA7RD,EAAOC,QAAU,CAAC,QAAU,uB,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,YAAc,uC,kICgBjBC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIC,UAAWC,IAAOC,aAAtB,SAAqCJ,IACpCC,M,gBCkBQI,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,QAAS,kBAAMH,EAAgBE,IAC/BE,KAAK,SACLT,UAAWC,IAAOS,YAJpB,SAMGH,GALIA,S,gBC0BAI,EA/BI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qBAAIhB,UAAWC,IAAOgB,UAAtB,UACE,wCACQ,sBAAMjB,UAAWC,IAAOiB,cAAxB,SAAwCN,OAEhD,2CACW,sBAAMZ,UAAWC,IAAOkB,iBAAxB,SAA2CN,OAEtD,uCACO,sBAAMb,UAAWC,IAAOmB,aAAxB,SAAuCN,OAE9C,yCACS,sBAAMd,UAAWC,IAAOoB,eAAxB,SAAyCN,OAElD,oDACqB,IACnB,uBAAMf,UAAWC,IAAOqB,iBAAxB,UAA2CN,EAA3C,cCVOO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCIC,SAASC,IACtB,MAA4BC,mBAAS,GAArC,mBAAOd,EAAP,KAAae,EAAb,KAKA,EAAkCD,mBAAS,GAA3C,mBAAOb,EAAP,KAAgBe,EAAhB,KAKA,EAA0BF,mBAAS,GAAnC,mBAAOZ,EAAP,KAAYe,EAAZ,KAwBMC,EAAqB,WAEzB,OADclB,EAAOC,EAAUC,GASjC,OACE,sBAAKd,UAAWC,IAAO8B,QAAvB,UACE,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAlCmB,SAAA2B,GACzB,OAAQA,GACN,IAAK,OACHL,GAAY,SAAAM,GAAS,OAAIA,EAAY,KACrC,MAEF,IAAK,UACHL,GAAe,SAAAK,GAAS,OAAIA,EAAY,KACxC,MAEF,IAAK,MACHJ,GAAW,SAAAI,GAAS,OAAIA,EAAY,KACpC,MAEF,QACE,aAsBF,cAAC,EAAD,CAASnC,MAAM,aAAf,SACGgC,IACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,IACPd,WApB0B,WAAO,IAAD,EAClCkB,EAAgC,IAAPtB,EAAckB,IAC7C,iBAAOK,KAAKC,MAAMF,UAAlB,QAA4C,EAkBxBG,KAGd,cAAC,EAAD,CAAcb,QAAQ,4BCjEhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b00a0966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"Statistics_statsList__CUH1x\",\"statsElemGood\":\"Statistics_statsElemGood__17pwS\",\"statsElemBad\":\"Statistics_statsElemBad__vVipW\",\"statsElemNeutral\":\"Statistics_statsElemNeutral__3JNFx\",\"statsElemTotal\":\"Statistics_statsElemTotal__1kooP\",\"statsElemPercent\":\"Statistics_statsElemPercent__3z8JG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__1NzvS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__cGETo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__2eqGF\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={styles.sectionTitle}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n          type=\"button\"\r\n          className={styles.feedbackBtn}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\r\n  return (\r\n    <ul className={styles.statsList}>\r\n      <li>\r\n        Good: <span className={styles.statsElemGood}>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral: <span className={styles.statsElemNeutral}>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad: <span className={styles.statsElemBad}>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total: <span className={styles.statsElemTotal}>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive feedback:{' '}\r\n        <span className={styles.statsElemPercent}>{percentage}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\r\nimport './index.css';\r\nimport styles from './App.module.css';\r\nimport Section from './components/Section/Section.jsx';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.jsx';\r\nimport Statistics from './components/Statistics/Statistics.jsx';\r\nimport Notification from './components/Notification/Notification.jsx';\r\n\r\nexport default function FeedbackApp() {\r\n  const [good, setGoodRate] = useState(0);\r\n  // const handleGoodRate = () => {\r\n  //   setGoodRate(prevGood => prevGood + 1);\r\n  // };\r\n\r\n  const [neutral, setNeutralRate] = useState(0);\r\n  // const handleNeutralRate = () => {\r\n  //   setNeutralRate(prevNeutral => prevNeutral + 1);\r\n  // };\r\n\r\n  const [bad, setBadRate] = useState(0);\r\n  // const handleBadRate = () => {\r\n  //   setBadRate(prevBad => prevBad + 1);\r\n  // };\r\n\r\n  const handleFeedbackRate = optionType => {\r\n    switch (optionType) {\r\n      case 'good':\r\n        setGoodRate(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutralRate(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBadRate(prevState => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  const countGoodFeedbackPercentage = () => {\r\n    const goodFeedbackPecentage = (good * 100) / countTotalFeedback();\r\n    return Math.round(goodFeedbackPecentage) ?? 0;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={handleFeedbackRate}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            percentage={countGoodFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given!\"></Notification>\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n// ****Old version with class**** //\r\n// import React, { Component } from 'react';\r\n// export class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   countTotalFeedback() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     const total = good + neutral + bad;\r\n//     return total;\r\n//   }\r\n\r\n//   countGoodFeedbackPercentage() {\r\n//     const { good } = this.state;\r\n//     const total = this.countTotalFeedback();\r\n//     const goodFeedbackPecentage = (good * 100) / total;\r\n//     return Math.round(goodFeedbackPecentage);\r\n//   }\r\n\r\n//   onLeaveFeedback = label => {\r\n//     this.setState(prevState => ({\r\n//       [label]: prevState[label] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { good } = this.state;\r\n//     const { neutral } = this.state;\r\n//     const { bad } = this.state;\r\n//     const total = this.countTotalFeedback();\r\n//     const percentage = this.countGoodFeedbackPercentage();\r\n\r\n//     return (\r\n//       <div className={styles.Wrapper}>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={Object.keys(this.state)}\r\n//             onLeaveFeedback={this.onLeaveFeedback}\r\n//           />\r\n//         </Section>\r\n//         <Section title=\"Statistics\">\r\n//           {total === 0 ? (\r\n//             <Notification message=\"No feedback given!\"></Notification>\r\n//           ) : (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={total}\r\n//               percentage={percentage}\r\n//             />\r\n//           )}\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}